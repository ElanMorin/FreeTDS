/* FreeTDS - Library of routines accessing Sybase and Microsoft databases
 * Copyright (C) 1998-1999  Brian Bruns
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */

#ifndef _tds_configs_h_
#define _tds_configs_h_

static char rcsid_tds_configs_h[]=
	 "$Id: tds_configs.h.in,v 1.5 2002/10/11 20:47:41 castellano Exp $";
static void *no_unused_tds_configs_h_warn[]={rcsid_tds_configs_h, no_unused_tds_configs_h_warn};

#ifdef __cplusplus
extern "C" {
#endif

/* 
** this is where platform specific changes need to be made.
** I've tried to change all references to data that goes to 
** or comes off the wire to use these typedefs.  I've probably 
** missed a bunch, but the idea is we can do an ifdef here 
** to set the appropriately sized native type.
**
** If you have problems on 64-bit machines and the code is 
** using a native datatype, please change the code to use
** these. (In the TDS layer only, the API layers have their
** own typedefs which equate to these).
*/
typedef char                 TDS_CHAR;      /*  8 bit char     */
typedef unsigned char        TDS_UCHAR;     /*  8 bit uchar    */
typedef unsigned char        TDS_TINYINT;   /*  8 bit int      */
typedef @smallint@           TDS_SMALLINT;  /* 16 bit int      */
typedef unsigned @smallint@  TDS_USMALLINT; /* 16 bit unsigned */
typedef @int@                TDS_INT;       /* 32 bit int      */
typedef unsigned @int@       TDS_UINT;      /* 32 bit unsigned */
typedef @real@               TDS_REAL;      /* 32 bit float    */
typedef @float@              TDS_FLOAT;     /* 64 bit float    */
typedef @int64@              TDS_INT8;      /* 64 bit integer  */
typedef unsigned @int64@     TDS_UINT8;     /* 64 bit integer  */

typedef @int64@ rep_atoll_return_type;

#define FREETDS_SYSCONFDIR "@sysconfdir@"
#define FREETDS_SYSCONFFILE "@sysconfdir@/freetds.conf"
#define FREETDS_POOLCONFFILE "@sysconfdir@/pool.conf"
#define FREETDS_LOCALECONFFILE "@sysconfdir@/locales.conf"

#ifdef __cplusplus
}
#endif 

#endif /* _tds_configs_h_ */

