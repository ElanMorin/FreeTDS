#!/bin/bash

# $Id: sybase_tests,v 1.1 2009/04/17 14:29:44 freddy77 Exp $
# these commands build dblib tests using Sybase dblib

errore() {
	echo $* >&2
	exit 1
}

test -x configure || errore "configure not found, go to main directory"
test -d "$SYBASE" || errore "SYBASE environment not defined"
MAINDIR="`pwd`"
cd "$SYBASE"
OCSDIR=`echo OCS-*`
cd "$MAINDIR"
test -d "$SYBASE/$OCSDIR" || errore "OCS directory not found"

# build
trap 'echo Error at line $LINENO' ERR
set -e
make -j4
TESTS_ENVIRONMENT=true make -j4 check

handle_exit() {
	echo Exiting
	if test -r "$MAINDIR/src/dblib/unittests/Makefile.no_sybase"; then
		cp -f "$MAINDIR/src/dblib/unittests/Makefile.no_sybase" "$MAINDIR/src/dblib/unittests/Makefile" && rm -f "$MAINDIR/src/dblib/unittests/Makefile.no_sybase"
	fi
	rm -f "$MAINDIR/src/dblib/unittests/sqlfront.h" "$MAINDIR/src/dblib/unittests/sqldb.h"
}

# rebuild tests
cd src/dblib/unittests
rm -f *.o *.exe
make clean
trap handle_exit EXIT
echo '#include <sybfront.h>' > sqlfront.h
echo '#include <sybdb.h>' > sqldb.h
perl -pi.no_sybase -e "\$_ =~ s{ -I\\\$\\(top_(build|src)dir\\)/include}{ -I$SYBASE/$OCSDIR/include -I\\\$(top_builddir)/include} if (/^(DEFAULT_INCLUDES|AM_CPPFLAGS)\s*=/);
\$_ =~ s{../libsybdb.la}{-lsybdb -lsybunic} if (/^LIBS\s*=/);
\$_ =~ s{-L../.libs -R \\\$\\(abs_builddir\\)/../.libs}{-L$SYBASE/$OCSDIR/lib} if (/^AM_LDFLAGS\s*=/);
" Makefile
TESTS_ENVIRONMENT=true make -j4 check 

